name: Build Application and Make Release

on:
  push:
    tags:
      - '*'

jobs:

  build_release:
    name: Build Release
    uses: ./.github/workflows/build.yml
    with:
      build_type: Release
      is_qt_cached: false
    secrets:
      SPARKLE_ED25519_KEY: ${{ secrets.SPARKLE_ED25519_KEY }}

  create_release:
    needs: build_release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          path: 'SpectrumLauncher-source'
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Grab and store version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV
      - name: Package artifacts properly
        run: |
          mv ${{ github.workspace }}/SpectrumLauncher-source SpectrumLauncher-${{ env.VERSION }}
          mv SpectrumLauncher-Linux-Qt6-Portable*/SpectrumLauncher-portable.tar.gz SpectrumLauncher-Linux-Qt6-Portable-${{ env.VERSION }}.tar.gz
          mv SpectrumLauncher-Linux-Qt6*/SpectrumLauncher.tar.gz SpectrumLauncher-Linux-Qt6-${{ env.VERSION }}.tar.gz          
          mv SpectrumLauncher-Linux-Portable*/SpectrumLauncher-portable.tar.gz SpectrumLauncher-Linux-Portable-${{ env.VERSION }}.tar.gz
          mv SpectrumLauncher-Linux*/SpectrumLauncher.tar.gz SpectrumLauncher-Linux-${{ env.VERSION }}.tar.gz
          mv SpectrumLauncher-*.AppImage/SpectrumLauncher-*.AppImage SpectrumLauncher-Linux-${{ env.VERSION }}-x86_64.AppImage
          mv SpectrumLauncher-macOS-Legacy*/SpectrumLauncher.tar.gz SpectrumLauncher-macOS-Legacy-${{ env.VERSION }}.tar.gz
          mv SpectrumLauncher-macOS*/SpectrumLauncher.tar.gz SpectrumLauncher-macOS-${{ env.VERSION }}.tar.gz

          tar -czf SpectrumLauncher-${{ env.VERSION }}.tar.gz SpectrumLauncher-${{ env.VERSION }}

          for d in SpectrumLauncher-Windows-MSVC*; do
            cd "${d}" || continue
            LEGACY="$(echo -n ${d} | grep -o Legacy || true)"
            ARM64="$(echo -n ${d} | grep -o arm64 || true)"
            INST="$(echo -n ${d} | grep -o Setup || true)"
            PORT="$(echo -n ${d} | grep -o Portable || true)"
            NAME="SpectrumLauncher-Windows-MSVC"
            test -z "${LEGACY}" || NAME="${NAME}-Legacy"
            test -z "${ARM64}" || NAME="${NAME}-arm64"
            test -z "${PORT}" || NAME="${NAME}-Portable"
            test -z "${INST}" || mv SpectrumLauncher-*.exe ../${NAME}-Setup-${{ env.VERSION }}.exe
            test -n "${INST}" || zip -r -9 "../${NAME}-${{ env.VERSION }}.zip" *
            cd ..
          done

          for d in SpectrumLauncher-Windows-MinGW-w64*; do
            cd "${d}" || continue
            INST="$(echo -n ${d} | grep -o Setup || true)"
            PORT="$(echo -n ${d} | grep -o Portable || true)"
            NAME="SpectrumLauncher-Windows-MinGW-w64"
            test -z "${PORT}" || NAME="${NAME}-Portable"
            test -z "${INST}" || mv SpectrumLauncher-*.exe ../${NAME}-Setup-${{ env.VERSION }}.exe
            test -n "${INST}" || zip -r -9 "../${NAME}-${{ env.VERSION }}.zip" *
            cd ..
          done

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Prism Launcher ${{ env.VERSION }}
          draft: true
          prerelease: false
          files: |
            SpectrumLauncher-Linux-${{ env.VERSION }}.tar.gz
            SpectrumLauncher-Linux-Portable-${{ env.VERSION }}.tar.gz
            SpectrumLauncher-Linux-${{ env.VERSION }}-x86_64.AppImage
            SpectrumLauncher-Linux-Qt6-${{ env.VERSION }}.tar.gz
            SpectrumLauncher-Linux-Qt6-Portable-${{ env.VERSION }}.tar.gz
            SpectrumLauncher-Windows-MinGW-w64-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MinGW-w64-Portable-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MinGW-w64-Setup-${{ env.VERSION }}.exe
            SpectrumLauncher-Windows-MSVC-Legacy-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MSVC-Legacy-Portable-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MSVC-Legacy-Setup-${{ env.VERSION }}.exe
            SpectrumLauncher-Windows-MSVC-arm64-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MSVC-arm64-Portable-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MSVC-arm64-Setup-${{ env.VERSION }}.exe
            SpectrumLauncher-Windows-MSVC-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MSVC-Portable-${{ env.VERSION }}.zip
            SpectrumLauncher-Windows-MSVC-Setup-${{ env.VERSION }}.exe
            SpectrumLauncher-macOS-${{ env.VERSION }}.tar.gz
            SpectrumLauncher-macOS-Legacy-${{ env.VERSION }}.tar.gz
            SpectrumLauncher-${{ env.VERSION }}.tar.gz
